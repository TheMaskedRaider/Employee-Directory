{"version":3,"sources":["components/jumbotron/index.js","components/searchbar/index.js","utils/API.js","components/table/index.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","Searchbar","props","value","search","onChange","handleInputChange","name","type","placeholder","id","axios","get","Table","state","results","sort","event","setState","target","console","log","searchFilter","item","first","last","toLowerCase","includes","sortToggle","API","then","res","data","catch","err","this","filter","class","scope","onClick","a","b","localeCompare","map","src","picture","thumbnail","alt","phone","email","dob","date","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afdeb747.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nfunction Jumbotron(){\r\n    return(\r\n        <div className='jumbotron jumbotron-fluid'>\r\n            <div className=\"container\">\r\n                <h1 className='display-4'>Employee Directory</h1>\r\n                <p>Search for an employee!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\n\r\nfunction Searchbar(props){\r\n    return(\r\n        <form className=\"search\">\r\n    <div className=\"form-group search-widget\">\r\n    <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name=\"employee\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search for employees.\"\r\n          id=\"employee\"\r\n        />\r\n    </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","//importing axios for use with react\r\nimport axios from \"axios\";\r\n\r\n//exporting the getRandomEmployee function which returns an array of random users/employees.\r\nexport default {\r\n    getRandomEmployee: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\"\r\nimport API from \"../../utils/API.js\";\r\nimport Searchbar from \"../searchbar\";\r\n\r\n\r\nclass Table extends Component {\r\n    state = {\r\n        search: \"\",\r\n        results: [],\r\n        sort: \"desc\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log('I have mounted!')\r\n        API.getRandomEmployee()\r\n            .then(res => {\r\n                this.setState({ results: res.data.results })\r\n                console.log(res.data.results)\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value});\r\n        console.log(this.state.search)\r\n    };\r\n\r\nsearchFilter= item =>  this.state.search ?\r\n    `${item.name.first}${item.name.last}`.toLowerCase().includes(this.state.search.toLowerCase()):true\r\n\r\nsortToggle= () => {\r\n    this.setState({ sort: this.state.sort == \"desc\" ? \"asc\": \"desc\"});\r\n    console.log(this.state.sort)\r\n\r\n};\r\n\r\n\r\n    render() {\r\n        console.log(this.state.results.filter(item => item.name.first === this.state.search))\r\n\r\n        return (\r\n            <div>\r\n                <Searchbar\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n\r\n\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col md-2\">Profile Image</th>\r\n                            <th scope=\"col md-2\" onClick={this.sortToggle}>First {this.state.sort === 'desc' ? \"▼\": \"▲\"}</th>\r\n                            <th scope=\"col md-2\">Last</th>\r\n                            <th scope=\"col md-2\">Phone#</th>\r\n                            <th scope=\"col md-2\">Email</th>\r\n                            <th scope=\"col md-2\">DOB</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {\r\n                            this.state.results.filter(this.searchFilter).sort((a,b)=> this.state.sort ===\"desc\" ? a.name.first.localeCompare(b.name.first): b.name.first.localeCompare(a.name.first)).map(item =>\r\n                                <tr>\r\n                                    <td ><img src={item.picture.thumbnail} className=\"square\" alt=\"thumbnail\" /></td>\r\n                                    <td >{item.name.first}</td>\r\n                                    <td >{item.name.last}</td>\r\n                                    <td >{item.phone}</td>\r\n                                    <td >{item.email}</td>\r\n                                    <td>{item.dob.date}</td>\r\n                                </tr>\r\n\r\n\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Table;","import React from \"react\";\nimport \"../src/App.css\"\nimport Jumbotron from \"./components/jumbotron/index.js\";\nimport Searchbar from \"./components/searchbar/index.js\";\nimport Table from \"./components/table/index.js\";\n\nfunction App() {\n  return (\n    <div>\n      <Jumbotron/>\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}